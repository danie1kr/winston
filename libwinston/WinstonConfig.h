#pragma once

#ifdef WINSTON_PROJECT_CINEMA
/*
* MaTouch_ESP32-S3 Parallel TFT with Touch 3.5'' ILI9488
* https://www.makerfabs.com/esp32-s3-parallel-tft-with-touch-ili9488.html

* Display 480*320
* SD-Card for storing movies as jpeg sequences
* WiFi for WebsocketClient
*/

#define WINSTON_PLATFORM_ESP32
#define WINSTON_WITH_SDFAT
#define WINSTON_HAL_USE_STORAGE
#define WINSTON_HAL_USE_DISPLAYUX
#define WINSTON_HAL_USE_WEBSOCKETCLIENT

// SDfat
#define SDFAT_FILE_TYPE 3
#define SPI_DRIVER_SELECT 0

// Lavoyan GFX
#define LGFX_USE_V1

#endif

#define WINSTON_KLEINWEINHEIM

#ifdef WINSTON_PROJECT
#define WINSTON_HAL_USE_SPI
#define WINSTON_HAL_USE_GPIO
#define WINSTON_HAL_USE_SOCKETS
#define WINSTON_HAL_USE_SERIAL
#define WINSTON_HAL_USE_STORAGE
#define WINSTON_HAL_USE_WEBSERVER
#define WINSTON_WITH_WEBSOCKET
#endif

#define WINSTON_ENABLE_TURNOUT_GROUPS
#ifdef WINSTON_ENABLE_TURNOUT_GROUPS
#define WINSTON_TURNOUT_GROUP_TOGGLE 800ms
#endif

// Arduino JSON
#define ARDUINOJSON_ENABLE_STD_STRING 1
#define ARDUINOJSON_ENABLE_STD_STREAM 0
#define ARDUINOJSON_ENABLE_ARDUINO_STRING 0
#define ARDUINOJSON_ENABLE_ARDUINO_STREAM 0
#define ARDUINOJSON_ENABLE_ARDUINO_PRINT 0

#define WINSTON_SIGNAL_LIGHT_DIV 4

//#define WINSTON_STATISTICS
#ifdef WINSTON_STATISTICS
#define WINSTON_STATISTICS_DETAILLED
#define WINSTON_STATISTICS_SECONDS_PER_PRINT	(5)
#endif

//#define WINSTON_WITH_TEENSYDEBUG

#define WINSTON_DETECTOR_SIGNALING
#ifndef WINSTON_TEST
#define WINSTON_DETECTOR_ADDRESS 8
#ifdef WINSTON_DETECTOR_ADDRESS
#pragma message("Only handling loco with address 8")
#endif
#endif

#ifdef WINSTON_PLATFORM_TEENSY
#define WINSTON_REALWORLD
//#undef WINSTON_DETECTOR_SIGNALING
#endif

#ifdef WINSTON_PLATFORM_WIN_x64
#define WINSTON_WEBSOCKET_MAXSIZE 1 << 15
#define WINSTON_WITH_LOG
#else
#define WINSTON_WEBSOCKET_MAXSIZE 1 << 9
#endif

#ifndef WINSTON_REALWORLD
#define WINSTON_RAILWAY_DEBUG_INJECTOR
#define WINSTON_RAILWAY_DEBUG_INJECTOR_DELAY 200ms
#define WINSTON_TURNOUT_TOGGLE_INTERVAL	50ms
#define WINSTON_LOCO_POSITION_WEBUI_INTERVAL 100ms
#else
#define WINSTON_TURNOUT_TOGGLE_INTERVAL	500ms
#define WINSTON_LOCO_STATUS_INTERVAL 8000ms
#define WINSTON_LOCO_POSITION_WEBUI_INTERVAL 1000ms
#endif

#define WINSTON_WEBSERVER_WITH_LOG
#define WINSTON_WEBSERVER_WITH_SIGNAL

//#ifdef _DEBUG
//#define WINSTON_WEBSERVER_WITH_DEBUG
//#endif

#define WINSTON_STORAGE_LOCOSHED_VERSION 1
#define WINSTON_STORAGE_LOCOSHED_STRIDE 1536

//#define WINSTON_PACKED_WEBFILES

#define WINSTON_STORYLINES

#define WINSTON_HAS_CHRONO

#ifdef WINSTON_PLATFORM_TEENSY
//#define WINSTON_TEENSY_FLASHSTRING
//#define WINSTON_TEENSY_SPI_DEBUG
#endif

#ifdef WINSTON_PLATFORM_TEENSY
#include <Arduino.h>
#define TEENSY_CRASHLOG_BREADCRUMB(x, y) CrashReport.breadcrumb(x, y)
#else
#define TEENSY_CRASHLOG_BREADCRUMB(x, y)
#endif

#define WINSTON_ETHERNET_IP			IPAddress(192, 168, 188, 133)
#define WINSTON_ETHERNET_DNS		IPAddress(192, 168, 188, 1)
#define WINSTON_ETHERNET_GATEWAY	IPAddress(192, 168, 188, 1)
#define WINSTON_ETHERNET_SUBNET		IPAddress(255, 255, 255, 0)

//#ifdef WINSTON_PLATFORM_TEENSY
//#undef WINSTON_WITH_WEBSOCKET
//#undef WINSTON_HAL_USE_WEBSERVER
//#pragma message("no webserver on teensy")
//#endif

#define WINSTON_LOCO_TRACKING
#define WINSTON_LOCO_POSITION_TRACK_RATE				 40 //ms => 25hz (1000U/40U)		// 25hz
#define WINSTON_LOCO_SPEED_TRACK_RATE					100 //ms => 10hz (1000U/100U)	// 10hz
#define WINSTON_LOCO_UPDATE_POSITION_WEBSOCKET_RATE	   2000 //ms =>  1hz //(1000U/250U)	//  4hz	

/*
in case teensy does not start up:
	update fnet config:
		#define FNET_CFG_BENCH_CLN (0) // kaukerdl (1)  //Benchmark
		#define FNET_CFG_BENCH_CLN_BUFFER_SIZE          ((0) // kaukerdl 64*1024)
		#define FNET_CFG_SOCKET_TCP_TX_BUF_SIZE     (32U * 1024U)
		#define FNET_CFG_SOCKET_TCP_RX_BUF_SIZE     (32U * 1024U)
		#define FNET_CFG_BENCH_SRV (0) // kaukerdl (1)  //Benchmark
		#define FNET_CFG_BENCH_SRV_BUFFER_SIZE          (0) // kaukerdl (128*1024)
	remove everything not needed

	avoid PROGMEM routines
*/